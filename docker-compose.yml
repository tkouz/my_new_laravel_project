# Docker Compose version
version: '3.8'

# Services (containers) definitions
services:
    # Laravel application service
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.3 # Build context for the PHP-FPM container
            dockerfile: Dockerfile # Dockerfile to use for building
            args:
                WWWGROUP: '${WWWGROUP}' # Pass WWWGROUP as a build argument
        # Environment variables for the container
        environment:
            WWWUSER: '${WWWUSER}' # User ID for the www-data user
            LARAVEL_SAIL: 1 # Flag for Laravel Sail
            XDEBUG_MODE: '${XDEBUG_MODE:-off}' # Xdebug mode (off by default)
            XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}' # Xdebug client host
        # Volumes to mount into the container
        volumes:
            - '.:/var/www/html' # Mount current directory to /var/www/html
            # ★追加: Nginx設定ファイルをコンテナにマウント
            - './vendor/laravel/sail/runtimes/8.3/sails/8.3/nginx.conf:/etc/nginx/http.d/default.conf'
        # Ports to expose (PHP-FPM typically doesn't expose ports directly)
        ports:
            - '${APP_PORT:-80}:80' # Map host port 80 to container port 80 (for Apache/Nginx)
            - '5173:5173'
        # Networks the container belongs to
        networks:
            - sail
        # Depends on services (order of startup)
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium

    # MySQL database service
    mysql:
        image: 'mysql/mysql-server:8.0' # MySQL server image
        ports:
            - '${DB_PORT:-3306}:3306' # Map host port 3306 to container port 3306
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}' # Root password for MySQL
            MYSQL_ROOT_HOST: '%' # Allow root access from any host
            MYSQL_DATABASE: '${DB_DATABASE}' # Database name
            MYSQL_USER: '${DB_USERNAME}' # Database user
            MYSQL_PASSWORD: '${DB_PASSWORD}' # Database user password
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes' # Allow empty password (for development)
        volumes:
            - 'sail-mysql:/var/lib/mysql' # Persistent volume for MySQL data
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh' # Script to create testing database
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            # time: 5 # この行は前回削除済み

    # Redis service
    redis:
        image: 'redis:alpine' # Redis image
        ports:
            - '${REDIS_PORT:-6379}:6379' # Map host port 6379 to container port 6379
        volumes:
            - 'sail-redis:/data' # Persistent volume for Redis data
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            # time: 5 # この行は前回削除済み

    # Meilisearch service (for full-text search)
    meilisearch:
        image: 'getmeili/meilisearch:latest' # Meilisearch image
        ports:
            - '${MEILISEARCH_PORT:-7700}:7700' # Map host port 7700 to container port 7700
        volumes:
            - 'sail-meilisearch:/meili_data' # Persistent volume for Meilisearch data
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://localhost:7700/health'
            retries: 3
            # time: 5 # この行は前回削除済み

    # Selenium service (for browser testing)
    selenium:
        image: 'selenium/standalone-chrome' # Selenium Chrome image
        extra_hosts:
            - 'host.docker.internal:172.17.0.1' # Map host.docker.internal to host IP
        networks:
            - sail

# Networks definition
networks:
    sail:
        driver: bridge # Use bridge network driver

# Volumes definition
volumes:
    sail-mysql:
        driver: local # Local volume for MySQL
    sail-redis:
        driver: local # Local volume for Redis
    sail-meilisearch:
        driver: local # Local volume for Meilisearch
